// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id         Int      @id @default(autoincrement())
  firstName  String
  lastName   String
  userName   String   @unique
  email      String   @unique
  password   String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  avatar     String?
  bio        String?
  followings User[]   @relation(references: [id], "FollowingRelation")
  followers  User[]   @relation(references: [id], "FollowingRelation")

  photos Photo[]
  likes  Like[]


  Comment Comment[]
}

model Photo {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  file      String
  caption   String?
  User      User?    @relation(fields: [userId], references: [id])
  userId    Int?

  hashtags Hashtag[]
  likes    Like[]

  Comment Comment[]
}

model Hashtag {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  hashtag   String   @unique

  photos Photo[]
}

model Like {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user    User?  @relation(fields: [userId], references: [id])
  userId  Int?
  photo   Photo? @relation(fields: [photoId], references: [id])
  photoId Int?


  @@unique([userId, photoId])
}

model Comment {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  description String

  photo   Photo @relation(fields: [photoId], references: [id])
  user    User  @relation(fields: [userId], references: [id])
  userId  Int
  photoId Int
}
